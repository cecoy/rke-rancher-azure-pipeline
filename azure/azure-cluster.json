{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "eastus",
        "metadata": {
          "description": "Location for resources. Default is the current resource group location."
        }
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_D3_v2",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources (9 characters or less). A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 9
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 5,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100,
        "minValue": 1
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "publicIPPrefixLength": {
        "type": "int",
        "defaultValue": 28,
        "metadata": {
          "description": "Length of public IP prefix."
        },
        "maxValue": 31,
        "minValue": 28
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "string",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsZonesName": {
           "type": "string"
      },
      "cloudInit": {
           "type": "string"
      }
    },
    "variables": {
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPPrefixName": "[concat(parameters('vmssName'), 'pubipprefix')]",
      "dnsName": "[concat('dns', toLower(parameters('vmssName')))]",
      "virtualNetworkName": "[concat(parameters('vmssName'), 'vnet')]",
      "publicIPAddressName": "[concat(parameters('vmssName'), 'pip')]",
      "subnetName": "[concat(parameters('vmssName'), 'subnet')]",
      "loadBalancerName": "[concat(parameters('vmssName'), 'lb')]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "natPoolName": "[concat(parameters('vmssName'), 'natpool')]",
      "bePoolName": "[concat(parameters('vmssName'), 'bepool')]",
      "natStartPort": 50000,
      "natEndPort": 50120,
      "natBackendPort": 22,
      "nicName": "[concat(parameters('vmssName'), 'nic')]",
      "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
      "frontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('loadBalancerName'),'loadBalancerFrontEnd')]",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      },
      "log_analytics_name": "rketest2",
      "log_analytics_id": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('log_analytics_name'))]",
      "imageReference": "[variables('osType')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/publicIPPrefixes",
        "apiVersion": "2018-07-01",
        "name": "[variables('publicIPPrefixName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard",
          "tier": "Regional"
        },
        "properties": {
          "prefixLength": "[parameters('publicIPPrefixLength')]",
          "publicIPAddressVersion": "IPv4"
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "apiVersion": "2018-08-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vmssName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "apiVersion": "2018-08-01",
        "sku": {
          "name": "Standard",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[variables('dnsName')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard"
        },
        "apiVersion": "2018-08-01",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "loadBalancingRules": [
              {
                  "name": "[concat(parameters('vmssName'),'RuleWeb2')]",
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                      },
                      "frontendPort": 443,
                      "backendPort": 443,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "Tcp",
                      "enableTcpReset": false,
                      "loadDistribution": "Default",
                      "disableOutboundSnat": false,
                      "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                      },
                      "probe": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/default')]"
                      }
                  }
              },
              {
                  "name": "[concat(parameters('vmssName'),'RuleWeb1')]",
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                      },
                      "frontendPort": 80,
                      "backendPort": 80,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 4,
                      "protocol": "Tcp",
                      "enableTcpReset": false,
                      "loadDistribution": "Default",
                      "disableOutboundSnat": false,
                      "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('bePoolName'))]"
                      },
                      "probe": {
                          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/default')]"
                      }                      
                  }
              }
          ],
          "probes": [
              {
                  "name": "default",
                  "properties": {
                      "protocol": "tcp",
                      "port": 6443,
                      "intervalInSeconds": 5,
                      "numberOfProbes": 2
                  }
              }
          ],          
          "inboundNatPools": [
            {
              "name": "[variables('natPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": "[variables('natStartPort')]",
                "frontendPortRangeEnd": "[variables('natEndPort')]",
                "backendPort": "[variables('natBackendPort')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[parameters('vmssName')]",
        "location": "[parameters('location')]",
        "apiVersion": "2019-03-01",
        "dependsOn": [
          "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIPPrefixes/', variables('publicIPPrefixName'))]"
        ],
        "sku": {
          "name": "[parameters('vmSku')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": false,
          "upgradePolicy": {
            "mode": "Automatic",
            "automaticOSUpgradePolicy": {
              "enableAutomaticOSUpgrade":  true
            }
          },
          "virtualMachineProfile": {
            "extensionProfile": {
              "extensions": [
              {
                "type": "extensions",
                "name": "DependencyAgentLinux",
                "location": "[parameters('location')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                  "type": "DependencyAgentLinux",
                  "typeHandlerVersion": "9.5",
                  "autoUpgradeMinorVersion": true,
                  "settings": {}
                }
              },
              {
                "type": "extensions",
                "name": "OMSExtension",
                "location": "[parameters('location')]",
                "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "type": "OmsAgentForLinux",
                  "typeHandlerVersion": "1.4",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "workspaceId": "[reference(variables('log_analytics_id'), '2015-11-01-preview').customerId]",
                    "stopOnMultipleConnections": "true"
                  },
                  "protectedSettings": {
                    "workspaceKey": "[listKeys(variables('log_analytics_id'), '2015-11-01-preview').primarySharedKey]"
                  }
                }
              }
    ]
  },
            "storageProfile": {
              "osDisk": {
                "caching": "ReadOnly",
                "createOption": "FromImage"
              },
              "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
              "computerNamePrefix": "[parameters('vmssName')]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPasswordOrKey')]",
              "customData": "[parameters('cloudInit')]",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
               "healthProbe" : {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/default')]"
              },
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('nicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                          "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                          },
                          "publicipaddressconfiguration": {
                            "name": "pub1",
                            "properties": {
                              "idleTimeoutInMinutes": 15,
                              "PublicIpPrefix": {
                                "Id": "[resourceId('Microsoft.Network/publicIPPrefixes', variables('publicIpPrefixName'))]"
                              }
                            }
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'),variables('bePoolName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools',variables('loadBalancerName'), variables('natPoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      {
        "apiVersion": "2016-04-01",
        "type": "Microsoft.Network/dnsZones",
        "name": "[parameters('dnsZonesName')]",
        "location": "global",
        "dependsOn": [],
        "tags": {},
        "properties": {},
        "resources": [
        {
            "type": "Microsoft.Network/dnszones/A",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnsZonesName'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnsZonesName'))]"
            ],
            "properties": {
                "TTL": 60,
                "targetResource": {
                    "id": "[variables('publicIPAddressID')]"
                }
            }
        }]
      }
    ],
    "outputs": {
      "nodespriv": {
        "type": "array",
        "copy": {
          "count": "[parameters('instanceCount')]",
          "input": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'),'/virtualMachines/',copyIndex(),'/networkInterfaces/',variables('nicName')), '2020-06-01').ipConfigurations[0].properties.privateIPAddress]" 
        }
      },
      "nodespub": {
        "type": "array",
        "copy": {
          "count": "[parameters('instanceCount')]",
          "input": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'),'/virtualMachines/',copyIndex(),'/networkInterfaces/',variables('nicName'), '/ipConfigurations/',variables('ipConfigName'),'/publicIPAddresses/pub1'), '2020-06-01').ipAddress]"
        }
      },
      "nodeshost": {
        "type": "array",
        "copy": {
          "count": "[parameters('instanceCount')]",
          "input": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'),'/virtualMachines/',copyIndex()), '2020-06-01').osProfile.computerName]"
        }
      },
      "lbip": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmssName'), 'pip'))).ipAddress]"
      }      
    }
  }